name: Deploy to EC2

on:
  push:
    branches: [develop]

permissions:
  contents: read

concurrency:
  group: deploy-develop
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Setup Gradle (cache & wrapper verification)
        uses: gradle/actions/setup-gradle@v3

      - name: Build (skip tests)
        run: ./gradlew build -x test --console=plain

      - name: List build outputs
        run: ls -alh build/libs

      # 업로드할 산출물 경로를 하나로 확정(plain 제외)
      - name: Resolve artifact
        id: artifact
        shell: bash
        run: |
          set -euo pipefail
          ART="$(ls -t build/libs/*.jar | grep -v -- '-plain\.jar' | head -n1)"
          test -n "$ART"
          echo "path=$ART" >> "$GITHUB_OUTPUT"
          echo "file=$(basename "$ART")" >> "$GITHUB_OUTPUT"
          echo "Selected artifact: $ART"
          sha256sum "$ART" || true

      # 원격 폴더 준비 + 이전에 잘못 생긴 중첩 디렉토리 정리
      - name: Prepare remote dir
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            set -euxo pipefail
            mkdir -p /home/ubuntu/sunsak/build/libs
            # 중첩된 잔여물 정리(있으면)
            rm -rf /home/ubuntu/sunsak/build/libs/build || true

      # 산출물 "하나"만 업로드 (경로 보존 X)
      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "${{ steps.artifact.outputs.path }}"
          target: "/home/ubuntu/sunsak/build/libs/release.jar"
          overwrite: true

      # release.jar -> app.jar 링크 갱신 후 systemd 재시작
      - name: Symlink latest jar & restart via systemd
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            set -euxo pipefail
            cd /home/ubuntu/sunsak/build/libs

            echo ">>> After SCP:"
            ls -alh

            test -f release.jar || { echo "release.jar not found"; exit 1; }

            # app.jar를 release.jar로 고정 링크
            ln -sfn release.jar app.jar

            sudo systemctl daemon-reload
            sudo systemctl restart sunsak
            sudo systemctl --no-pager --full status sunsak || true
            journalctl -u sunsak -n 120 --no-pager || true
