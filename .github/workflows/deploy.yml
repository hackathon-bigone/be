name: Deploy to EC2

on:
  push:
    branches: [develop]

permissions:
  contents: read

concurrency:
  group: deploy-develop
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Setup Gradle (cache & wrapper verification)
        uses: gradle/actions/setup-gradle@v3

      - name: Build (skip tests)
        run: ./gradlew build -x test --console=plain

      - name: List build outputs
        run: ls -alh build/libs

      - name: Resolve artifact
        id: artifact
        shell: bash
        run: |
          set -euo pipefail
          ART="$(ls -t build/libs/*.jar | grep -v -- '-plain\.jar' | head -n1)"
          echo "path=$ART" >> "$GITHUB_OUTPUT"
          echo "file=$(basename "$ART")" >> "$GITHUB_OUTPUT"
          echo "Selected: $ART"

      - name: Prepare remote dir
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            set -euxo pipefail
            mkdir -p /home/ubuntu/sunsak/build/libs/incoming
            sudo mkdir -p /opt/sunsak

      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "${{ steps.artifact.outputs.path }}"
          target: "/home/ubuntu/sunsak/build/libs/incoming/"
          overwrite: true
          strip_components: 2

      - name: Replace /opt/sunsak/app.jar & restart & healthcheck
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            set -euxo pipefail
            cd /home/ubuntu/sunsak/build/libs

            echo ">>> Incoming list"
            ls -alh incoming || true

            # 최신 JAR(plain 제외 우선)
            CAND=$(find incoming -type f -name "*.jar" ! -name "*-plain.jar" -printf "%T@ %p\n" \
              | sort -nr | head -n1 | awk '{print $2}')
            if [ -z "$CAND" ]; then
              CAND=$(find incoming -type f -name "*.jar" -printf "%T@ %p\n" \
                | sort -nr | head -n1 | awk '{print $2}')
            fi
            test -n "$CAND"

            echo ">>> Install to /opt/sunsak/app.jar"
            sudo install -m 644 "$CAND" /opt/sunsak/app.jar
            rm -rf incoming

            sudo systemctl daemon-reload
            sudo systemctl restart sunsak.service
            sudo systemctl --no-pager --full status sunsak.service || true

            echo ">>> Health check"
            set +e
            for i in $(seq 1 60); do
              CODE=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/home/foodbox || echo 000)
              if [ "$CODE" != "000" ] && [ "$CODE" -lt 500 ]; then
                echo "OK: healthy (HTTP $CODE)"
                exit 0
              fi
              sleep 1
            done
            echo "ERROR: health check failed"
            journalctl -u sunsak.service -n 200 --no-pager
            exit 1
